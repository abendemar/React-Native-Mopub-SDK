buildscript {
    repositories {
        google()
        jcenter()
        maven { url "https://s3.amazonaws.com/moat-sdk-builds" }
        maven { url 'https://adcolony.bintray.com/AdColony' }
        maven { url 'https://tapjoy.bintray.com/maven' }
        maven { url 'https://jitpack.io' }
    }

    dependencies {
        // Matches the RN Hello World template
        // https://github.com/facebook/react-native/blob/1e8f3b11027fe0a7514b4fc97d0798d3c64bc895/local-cli/templates/HelloWorld/android/build.gradle#L8
        classpath 'com.android.tools.build:gradle:3.5.3'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'maven'

def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

def DEFAULT_COMPILE_SDK_VERSION = 27
def DEFAULT_BUILD_TOOLS_VERSION = "27.0.3"
def DEFAULT_MIN_SDK_VERSION = 16
def DEFAULT_TARGET_SDK_VERSION = 27

android {
  compileSdkVersion safeExtGet('compileSdkVersion', DEFAULT_COMPILE_SDK_VERSION)
  buildToolsVersion safeExtGet('buildToolsVersion', DEFAULT_BUILD_TOOLS_VERSION)

  defaultConfig {
    minSdkVersion safeExtGet('minSdkVersion', DEFAULT_MIN_SDK_VERSION)
    targetSdkVersion safeExtGet('targetSdkVersion', DEFAULT_TARGET_SDK_VERSION)
    versionCode 1
    versionName "1.0"
  }
  lintOptions {
    abortOnError false
  }
}

repositories {
    maven {
        // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
        // Matches the RN Hello World template
        // https://github.com/facebook/react-native/blob/1e8f3b11027fe0a7514b4fc97d0798d3c64bc895/local-cli/templates/HelloWorld/android/build.gradle#L21
        url "$projectDir/../node_modules/react-native/android"
    }
    mavenCentral()
    google()
            maven { url "https://s3.amazonaws.com/moat-sdk-builds" }
        maven { url 'https://adcolony.bintray.com/AdColony' }
        maven { url 'https://tapjoy.bintray.com/maven' }
        maven { url 'https://jitpack.io' }
}

dependencies {
    implementation 'com.facebook.react:react-native:+'
    implementation('com.mopub:mopub-sdk:5.16.4@aar') {
        transitive = true
    }

    // Required for Native Ads
    // Google (AdMob & Ad Manager)
    implementation 'com.google.android.gms:play-services-ads:20.0.0'
    implementation 'com.mopub.mediation:admob:20.0.0.1'
    // Facebook Network
    implementation 'com.facebook.android:audience-network-sdk:6.6.0'
    implementation 'com.mopub.mediation:facebookaudiencenetwork:6.6.0.0'
    
    //// Tapjoy
    implementation 'com.tapjoy:tapjoy-android-sdk:12.2.0@aar'
    implementation 'com.mopub.mediation:tapjoy:12.2.0.3'
    
    // Vungle
    implementation 'com.github.vungle:vungle-android-sdk:6.3.24'
    implementation 'com.mopub.mediation:vungle:6.3.24.2'
}

def configureReactNativePom(def pom) {
    def packageJson = new groovy.json.JsonSlurper().parseText(file('../package.json').text)

    pom.project {
        name packageJson.title
        artifactId packageJson.name
        version = packageJson.version
        group = "com.reactlibrary"
        description packageJson.description
        url packageJson.repository.baseUrl

        licenses {
            license {
                name packageJson.license
                url packageJson.repository.baseUrl + '/blob/master/' + packageJson.licenseFilename
                distribution 'repo'
            }
        }

        developers {
            developer {
                id packageJson.author.username
                name packageJson.author.name
            }
        }
    }
}

afterEvaluate { project ->

    task androidJavadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += files(android.bootClasspath)
        classpath += files(project.getConfigurations().getByName('compile').asList())
        include '**/*.java'
    }

    task androidJavadocJar(type: Jar, dependsOn: androidJavadoc) {
        classifier = 'javadoc'
        from androidJavadoc.destinationDir
    }

    task androidSourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
        include '**/*.java'
    }

    android.libraryVariants.all { variant ->
        def name = variant.name.capitalize()
        task "jar${name}"(type: Jar, dependsOn: variant.javaCompile) {
            from variant.javaCompile.destinationDir
        }
    }

    artifacts {
        archives androidSourcesJar
        archives androidJavadocJar
    }

    task installArchives(type: Upload) {
        configuration = configurations.archives
        repositories.mavenDeployer {
            // Deploy to react-native-event-bridge/maven, ready to publish to npm
            repository url: "file://${projectDir}/../android/maven"

            configureReactNativePom pom
        }
    }
}
